import java.nio.charset.StandardCharsets

plugins {
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'org.ajoberstar.reckon' version '0.18.3'
}

def generalCharset = StandardCharsets.UTF_8.name()

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

group = 'xo.marketbot'

compileJava.options.encoding = generalCharset
compileTestJava.options.encoding = generalCharset
javadoc.options.encoding = generalCharset

reckon {
    defaultInferredScope = 'patch'
    stages('dev', 'beta', 'rc', 'final')

    scopeCalc = calcScopeFromProp() | calcScopeFromCommitMessages()
    stageCalc = calcStageFromProp()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('sentryVersion', "7.6.0")
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.16.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.5.0'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '10.20.1'
    implementation group: 'org.flywaydb', name: 'flyway-mysql', version: '10.20.1'

    implementation group: 'net.dv8tion', name: 'JDA', version: '5.2.0'

    implementation group: 'fr.alexpado', name: 'xodb4j', version: '1.0.0-rc.9'
    implementation group: 'fr.alexpado', name: 'simple-http-client', version: '1.1.2'
    implementation(group: 'fr.alexpado', name: 'jda-interactions-extension', version: '1.0.0-rc.2') {
        exclude(group: 'io.sentry')
    }

    implementation group: 'net.htmlparser.jericho', name: 'jericho-html', version: '3.4'
    implementation group: 'org.json', name: 'json', version: '20240303'

    implementation group: 'org.jetbrains', name: 'annotations', version: '26.0.1'
}

tasks.register('copyConfigurationMetadata', Copy) {
    from(compileJava) {
        include 'META-INF/spring-configuration-metadata.json'
    }
    into "out/production/classes"
}

dependencyManagement {
    imports {
        mavenBom "io.sentry:sentry-bom:${sentryVersion}"
    }
}

test {
    useJUnitPlatform()
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

compileJava {
    dependsOn processResources
    finalizedBy copyConfigurationMetadata
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
