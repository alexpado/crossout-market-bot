plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

group = 'fr.alexpado.bots'
version = '3.0.0-SNAPSHOT'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = "GitHubPackages"
        url = uri('https://maven.pkg.github.com/alexpado/simple-http-client')

        credentials {
            username = project.findProperty('gpr.user') ?: System.getenv('username')
            password = project.findProperty('gpr.key') ?: System.getenv('token')
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation 'net.dv8tion:JDA:4.3.0_283'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
    implementation group: 'net.htmlparser.jericho', name: 'jericho-html', version: '3.4'
    implementation 'org.flywaydb:flyway-core:7.10.0'

    implementation group: 'fr.alexpado', name: 'simple-http-client', version: '1.0.1'

    implementation 'io.sentry:sentry-spring-boot-starter:5.0.1'
}

task copyConfigurationMetadata(type: Copy) {
    from(compileJava) {
        include 'META-INF/spring-configuration-metadata.json'
    }
    into "out/production/classes"
}
compileJava {
    dependsOn processResources
    finalizedBy copyConfigurationMetadata
}

test {
    useJUnitPlatform()
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    // Example 2: disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
